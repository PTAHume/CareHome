// <auto-generated />
using System;
using CareHome.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CareHome.Migrations
{
    [DbContext(typeof(CareHomeContext))]
    [Migration("20220719174508_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CareHome.Models.AddressDetails", b =>
                {
                    b.Property<int>("AddressDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressDetailsId"), 1L, 1);

                    b.Property<string>("Locality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberStreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressDetailsId");

                    b.ToTable("AddressDetails");
                });

            modelBuilder.Entity("CareHome.Models.CareHomes", b =>
                {
                    b.Property<int>("CareHomesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CareHomesId"), 1L, 1);

                    b.Property<int?>("AddressDetailsId")
                        .HasColumnType("int");

                    b.Property<int?>("ContactDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CareHomesId");

                    b.HasIndex("AddressDetailsId");

                    b.HasIndex("ContactDetailsId");

                    b.ToTable("CareHomes");
                });

            modelBuilder.Entity("CareHome.Models.ContactDetails", b =>
                {
                    b.Property<int>("ContactDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactDetailsId"), 1L, 1);

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactDetailsId");

                    b.ToTable("ContactDetails");
                });

            modelBuilder.Entity("CareHome.Models.Departments", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("CareHome.Models.EthnicityGroups", b =>
                {
                    b.Property<int>("EthnicityGroupsId")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EthnicityGroupsId");

                    b.ToTable("EthnicityGroups");
                });

            modelBuilder.Entity("CareHome.Models.EthnicityTypes", b =>
                {
                    b.Property<int>("EthnicityTypesId")
                        .HasColumnType("int");

                    b.Property<int>("EthnicityName")
                        .HasColumnType("int");

                    b.HasKey("EthnicityTypesId");

                    b.ToTable("EthnicityTypes");
                });

            modelBuilder.Entity("CareHome.Models.GenderTypes", b =>
                {
                    b.Property<int>("GenderTypesId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenderTypesId");

                    b.ToTable("GenderTypes");
                });

            modelBuilder.Entity("CareHome.Models.JobTitles", b =>
                {
                    b.Property<int>("JobTitlesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobTitlesId"), 1L, 1);

                    b.Property<decimal>("DefaultSalery")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobTitlesId");

                    b.ToTable("JobTitles");
                });

            modelBuilder.Entity("CareHome.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"), 1L, 1);

                    b.Property<int?>("AddressDetailsId")
                        .HasColumnType("int");

                    b.Property<int?>("CareHomesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Forename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JobTitlesId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleNames")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("StaffId");

                    b.HasIndex("AddressDetailsId");

                    b.HasIndex("CareHomesId");

                    b.HasIndex("JobTitlesId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("CareHome.Models.CareHomes", b =>
                {
                    b.HasOne("CareHome.Models.AddressDetails", "Address")
                        .WithMany()
                        .HasForeignKey("AddressDetailsId");

                    b.HasOne("CareHome.Models.ContactDetails", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactDetailsId");

                    b.Navigation("Address");

                    b.Navigation("ContactInfo");
                });

            modelBuilder.Entity("CareHome.Models.Departments", b =>
                {
                    b.HasOne("CareHome.Models.JobTitles", null)
                        .WithMany("Department")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CareHome.Models.EthnicityGroups", b =>
                {
                    b.HasOne("CareHome.Models.Staff", null)
                        .WithMany("Ethnicity")
                        .HasForeignKey("EthnicityGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CareHome.Models.EthnicityTypes", b =>
                {
                    b.HasOne("CareHome.Models.EthnicityGroups", null)
                        .WithMany("EthnicityClasses")
                        .HasForeignKey("EthnicityTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CareHome.Models.GenderTypes", b =>
                {
                    b.HasOne("CareHome.Models.Staff", null)
                        .WithMany("Gender")
                        .HasForeignKey("GenderTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CareHome.Models.Staff", b =>
                {
                    b.HasOne("CareHome.Models.AddressDetails", "Address")
                        .WithMany()
                        .HasForeignKey("AddressDetailsId");

                    b.HasOne("CareHome.Models.CareHomes", "SiteLocation")
                        .WithMany()
                        .HasForeignKey("CareHomesId");

                    b.HasOne("CareHome.Models.JobTitles", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitlesId");

                    b.Navigation("Address");

                    b.Navigation("JobTitle");

                    b.Navigation("SiteLocation");
                });

            modelBuilder.Entity("CareHome.Models.EthnicityGroups", b =>
                {
                    b.Navigation("EthnicityClasses");
                });

            modelBuilder.Entity("CareHome.Models.JobTitles", b =>
                {
                    b.Navigation("Department");
                });

            modelBuilder.Entity("CareHome.Models.Staff", b =>
                {
                    b.Navigation("Ethnicity");

                    b.Navigation("Gender");
                });
#pragma warning restore 612, 618
        }
    }
}
